[{"/Users/isabelan/Desktop/CSE330/creativeproject-module7-458267-456941/client/src/index.js":"1","/Users/isabelan/Desktop/CSE330/creativeproject-module7-458267-456941/client/src/components/CreateEmployee Comp.js":"2","/Users/isabelan/Desktop/CSE330/creativeproject-module7-458267-456941/client/src/components/LoginComp.js":"3","/Users/isabelan/Desktop/CSE330/creativeproject-module7-458267-456941/client/src/components/InventoryDisplayComp.js":"4","/Users/isabelan/Desktop/CSE330/creativeproject-module7-458267-456941/client/src/components/CheckoutComp.js":"5","/Users/isabelan/Desktop/CSE330/creativeproject-module7-458267-456941/client/src/components/TransactionsLogComp.js":"6","/Users/isabelan/Desktop/CSE330/creativeproject-module7-458267-456941/client/src/components/test.js":"7"},{"size":9603,"mtime":1607665814379,"results":"8","hashOfConfig":"9"},{"size":3824,"mtime":1607648421570,"results":"10","hashOfConfig":"9"},{"size":7653,"mtime":1607759271485,"results":"11","hashOfConfig":"9"},{"size":15793,"mtime":1607720087410,"results":"12","hashOfConfig":"9"},{"size":9175,"mtime":1607830067712,"results":"13","hashOfConfig":"9"},{"size":2141,"mtime":1607759707373,"results":"14","hashOfConfig":"9"},{"size":7926,"mtime":1607579403518,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1pgc8ts",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/isabelan/Desktop/CSE330/creativeproject-module7-458267-456941/client/src/index.js",[],["33","34"],"/Users/isabelan/Desktop/CSE330/creativeproject-module7-458267-456941/client/src/components/CreateEmployee Comp.js",[],"/Users/isabelan/Desktop/CSE330/creativeproject-module7-458267-456941/client/src/components/LoginComp.js",[],"/Users/isabelan/Desktop/CSE330/creativeproject-module7-458267-456941/client/src/components/InventoryDisplayComp.js",[],"/Users/isabelan/Desktop/CSE330/creativeproject-module7-458267-456941/client/src/components/CheckoutComp.js",["35","36"],"import React from \"react\";\nimport axios from \"axios\";\n\nclass CustomerCheckout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      date: new Date(),\n      items: {},\n      inventoryData: [],\n      viewSummary: false,\n      totalWeight: 0,\n      totalPrice: 0,\n      itemsForSummary: [],\n    };\n    this.getData = this.getData.bind(this);\n    this.handleQuantityChange = this.handleQuantityChange.bind(this);\n    this.submitCheckout = this.submitCheckout.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n    this.getCalculations = this.getCalculations.bind(this);\n    // this.changeHandler = this.changeHandler.bind(this);\n  }\n  changeHandler(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  componentDidMount() {\n    this.getData();\n    this.setState({ viewSummary: false });\n  }\n\n  getData() {\n    axios.get(\"http://localhost:5000/getAllInventory\").then((res) => {\n      let allCategories = [];\n      const data = res.data;\n      console.log(data);\n      for (let i in data) {\n        allCategories.push(data[i]);\n        let allItemTypes = [];\n        for (let j in data[i].itemTypes) {\n          allItemTypes.push(data[i].itemTypes[j]);\n        }\n        allCategories[i].itemTypes = allItemTypes;\n      }\n      this.setState({ inventoryData: allCategories });\n    });\n  }\n\n  handleQuantityChange(newItem) {\n    let item = {\n      [newItem.itemID]: {\n        quantity: newItem.quantity,\n        itemName: newItem.itemName,\n        categoryID: newItem.categoryID,\n      },\n    };\n\n    this.setState({\n      items: Object.assign(this.state.items, item),\n    });\n  }\n\n  submitCheckout(event) {\n    event.preventDefault();\n    const customerCheckoutObj = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      date: this.state.date,\n      items: this.state.items,\n    };\n    axios.post(\"/customerCheckout\", customerCheckoutObj).then((res) => {\n      console.log(res.data);\n    });\n\n    axios\n      .post(\"/customerCheckoutChangeInventory\", customerCheckoutObj)\n      .then((res) => {\n        console.log(res.data);\n      });\n\n    this.setState({ viewSummary: true });\n    this.setState({ itemsForSummary: Object.values(this.state.items) });\n    this.getCalculations();\n  }\n\n  getCalculations() {\n    const summaryInfo = {\n      items: this.state.items,\n    };\n    const summaryItems = Object.values(this.state.items);\n    console.log(\"line 94\");\n    console.log(summaryItems);\n    axios.get(\"/getAllInventory\").then((res) => {\n      console.log(res.data);\n      let totalPrice = 0;\n      let totalWeight = 0;\n      for (let i in summaryItems) {\n        let eachItemPrice = 0;\n        let eachItemWeight = 0;\n        for (let j in res.data) {\n          if (summaryItems[i].categoryID == res.data[j]._id) {\n            eachItemPrice = res.data[j].priceEstimate;\n            eachItemWeight = res.data[j].weightEstimate;\n            console.log(eachItemPrice);\n            console.log(eachItemWeight);\n          }\n        }\n        let eachTotalPrice = eachItemPrice * summaryItems[i].quantity;\n        let eachTotalWeight = eachItemWeight * summaryItems[i].quantity;\n        totalPrice = totalPrice + eachTotalPrice;\n        totalWeight = totalWeight + eachTotalWeight;\n      }\n\n      this.setState({\n        weight: totalWeight,\n        price: totalPrice,\n      });\n    });\n    // axios.post(\"/summaryCalculations\", summaryInfo).then((res) => {\n    //   const data = res.data;\n    //   let totalPrice = 0;\n    //   let totalWeight = 0;\n    //   for (let i in data) {\n    //     let eachItemPrice = data[i].priceEstimate * summaryItems[i].quantity;\n    //     totalPrice = totalPrice + eachItemPrice;\n    //     let eachItemWeight = data[i].weightEstimate * summaryItems[i].quantity;\n    //     totalWeight = totalWeight + eachItemWeight;\n    //   }\n    //   this.setState({\n    //     weight: totalWeight,\n    //     price: totalPrice,\n    //   });\n    // });\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.submitCheckout}>\n          <label>\n            First Name:\n            <input onChange={this.changeHandler} type=\"text\" name=\"firstName\" />\n          </label>\n          <label>\n            Last Name:\n            <input onChange={this.changeHandler} type=\"text\" name=\"lastName\" />\n          </label>\n          <label>\n            Email:\n            <input onChange={this.changeHandler} type=\"text\" name=\"email\" />\n          </label>\n          <ul>\n            {this.state.inventoryData.map((data) => (\n              <li key={data._id} id={data._id}>\n                <h2>{data.category}</h2>\n                <table>\n                  <tbody>\n                    <tr>\n                      <th> Item Name </th>\n                      <th> Quantity</th>\n                    </tr>\n                    {data.itemTypes.map((item) => (\n                      <tr key={item._id}>\n                        <td>\n                          {item.itemName}\n                          <ItemLine\n                            categoryID={data._id}\n                            itemID={item._id}\n                            itemName={item.itemName}\n                            handleQuantityChange={this.handleQuantityChange}\n                            maxQuantity={item.quantity}\n                          />\n                          {/* <input\n                            type=\"hidden\"\n                            name={\"itemName/\" + item._id}\n                            value={item.itemName}\n                          /> */}\n                        </td>\n                        {/* <td>\n                          <ItemLine />\n                        </td> */}\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </li>\n            ))}\n          </ul>\n          <input type=\"submit\" value=\"Checkout\" />\n        </form>\n        {this.state.viewSummary && (\n          <Summary\n            firstName={this.state.firstName}\n            lastName={this.state.lastName}\n            customerItems={this.state.itemsForSummary}\n            weight={this.state.weight}\n            price={this.state.price}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nclass ItemLine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemID: this.props.itemID,\n      itemNumber: 0,\n    };\n    // this.increaseButton = this.increaseButton.bind(this);\n    // this.decreaseButton = this.decreaseButton.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n    this.sendUp = this.sendUp.bind(this);\n  }\n\n  changeHandler(event) {\n    event.preventDefault();\n    this.setState({ itemNumber: event.target.value });\n    this.sendUp(event.target.value);\n    // if (event.target.value != this.state.itemNumber) {\n    //   return;\n    // } else {\n    //   this.sendUp();\n    // }\n  }\n\n  sendUp(value) {\n    const newItem = {\n      categoryID: this.props.categoryID,\n      itemID: this.state.itemID,\n      quantity: value,\n      itemName: this.props.itemName,\n    };\n    console.log(newItem.quantity);\n    this.props.handleQuantityChange(newItem);\n  }\n  // increaseButton(event) {\n  //   event.preventDefault();\n  //   let newValue = this.state.itemNumber + 1;\n  //   this.setState({ itemNumber: newValue });\n  //   this.changeHandler();\n  // }\n  // decreaseButton(event) {\n  //   event.preventDefault();\n  //   if (this.state.itemNumber > 0) {\n  //     let newValue = this.state.itemNumber - 1;\n  //     this.setState({ itemNumber: newValue });\n  //   }\n  //   this.changeHandler();\n  // }\n\n  render() {\n    // this.changeHandler();\n    return (\n      <span>\n        {/* <input\n          id={this.props.itemID}\n          type=\"hidden\"\n          name={\"itemName/\" + this.props.itemID}\n          value={this.props.itemName}\n        /> */}\n        {/* <button onClick={this.decreaseButton}>-</button>\n        <p> {this.state.itemNumber} </p> */}\n        {/* <input\n          id={this.props.itemID}\n          type=\"hidden\"\n          name={\"quantity/\" + this.props.itemID}\n          value={this.state.itemNumber}\n          onChange={this.changeHandler}\n        /> */}\n        {/* <button onClick={this.increaseButton}>+</button> */}\n        <input\n          type=\"number\"\n          min=\"0\"\n          max={this.props.maxQuantity}\n          value={this.state.itemNumber}\n          name=\"itemQuantity\"\n          onChange={this.changeHandler}\n        />\n      </span>\n    );\n  }\n}\n\nclass Summary extends React.Component {\n  render() {\n    return (\n      <div>\n        <h2>Thank you for coming to SWAP, {this.props.firstName}!</h2>\n        <p>Today, you got: </p>\n        <ul>\n          {this.props.customerItems.map((data, index) => (\n            <li key={index}>\n              {data.itemName}: {data.quantity}\n            </li>\n          ))}\n        </ul>\n        <p>\n          You saved approximately {this.props.weight} lbs worth of clothing from\n          waste and also approximately ${this.props.price}.\n        </p>\n      </div>\n    );\n  }\n}\nexport default CustomerCheckout;\n","/Users/isabelan/Desktop/CSE330/creativeproject-module7-458267-456941/client/src/components/TransactionsLogComp.js",[],["37","38"],"/Users/isabelan/Desktop/CSE330/creativeproject-module7-458267-456941/client/src/components/test.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":90,"column":11,"nodeType":"45","messageId":"46","endLine":90,"endColumn":22},{"ruleId":"47","severity":1,"message":"48","line":104,"column":42,"nodeType":"49","messageId":"50","endLine":104,"endColumn":44},{"ruleId":"39","replacedBy":"51"},{"ruleId":"41","replacedBy":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'summaryInfo' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["53"],["54"],"no-global-assign","no-unsafe-negation"]
